{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9b30db1bd4c256f05cb9","webpack:///./src/index.js","webpack:///./src/utils.js","webpack:///./src/chromecast-sdk.js"],"names":["install","Vue","options","$chromecast","applicationId","applicationName","applicationNamespace","VueEvents","Events","prototype","$events","checkIfChromecast","Receiver","Sender","$on","eventName","eventHandler","methods","emit","event","args","$emit","on","callback","off","$off","navigator","userAgent","indexOf","console","log","params","session","window","chrome","loadScript","isAvailable","initialize","castScript","document","createElement","src","getElementsByTagName","appendChild","cast","framework","setTimeout","context","CastContext","getInstance","setOptions","receiverApplicationId","autoJoinPolicy","language","sessionRequest","requestSession","then","e","catch","message","JSON","stringify","code","sessionId","addUpdateListener","sessionUpdateListener","isAlive","sessionStatus","sendMessage","onSuccess","onError","sessionListener","stop","CastReceiverContext","bind","playerManager","getPlayerManager","setMessageInterceptor","messages","MessageType","LOAD","loadRequestData","media","contentId","addEventListener","events","category","CORE"],"mappings":"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","file":"vue-chromecast-plugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-chromecast-plugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-chromecast-plugin\"] = factory();\n\telse\n\t\troot[\"vue-chromecast-plugin\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b30db1bd4c256f05cb9","import Utils from './utils';\nimport { Sender, Receiver } from './chromecast-sdk';\n\nexport default {\n  install(Vue, options) {\n    const $chromecast = {};\n    const { applicationId, applicationName, applicationNamespace } = options;\n\n    const VueEvents = new Utils.Events(Vue);\n\n    Sender.prototype.$events = VueEvents.$events;\n    Receiver.prototype.$events = VueEvents.$events;\n\n    if (Utils.checkIfChromecast()) {\n      $chromecast.Receiver = new Receiver({\n        applicationName,\n        applicationNamespace\n      });\n    } else {\n      $chromecast.Sender = new Sender({\n        applicationId,\n        applicationNamespace\n      });\n    }\n\n    $chromecast.$on = (eventName, eventHandler) => {\n      VueEvents.$events.$on(eventName, eventHandler);\n    };\n\n    // Register the vue plugin\n    Vue.prototype.$chromecast = $chromecast;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","class Events {\n  constructor(Vue) {\n    this.$events = new Vue({\n      methods: {\n        /**\n         * Emit the given event.\n         *\n         * @param {string|object} event\n         * @param {...*} args\n         */\n        emit(event, ...args) {\n          this.$emit(event, ...args);\n        },\n\n        /**\n         * Listen for the given event.\n         *\n         * @param {string} event\n         * @param {function} callback\n         */\n        on(event, callback) {\n          this.$on(event, callback);\n        },\n\n        /**\n         * Remove one or more event listeners.\n         *\n         * @param {string} event\n         * @param {function} callback\n         */\n        off(event, callback) {\n          this.$off(event, callback);\n        }\n      }\n    });\n  }\n}\n\nfunction checkIfChromecast() {\n  return navigator.userAgent.indexOf('CrKey') !== -1;\n}\n\nexport default { Events, checkIfChromecast };\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","const { log } = console;\n\nclass Sender {\n  constructor(params) {\n    this.log = log;\n    this.session = null;\n    this.params = params;\n\n    // If isn't a google chrome browser, obviously don't even try to start\n    // ChromeCast Web SDK.\n    if (window.chrome) {\n      this.loadScript();\n\n      window['__onGCastApiAvailable'] = (isAvailable) => {\n        if (isAvailable) {\n          this.initialize();\n        }\n      };\n    }\n  }\n\n  loadScript() {\n    // Inject chromecast script\n    const castScript = document.createElement('script');\n\n    castScript.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js' +\n      '?loadCastFramework=1';\n    document.getElementsByTagName('head')[0].appendChild(castScript);\n  }\n\n  initialize() {\n    if (!window.cast || !window.cast.framework) {\n      setTimeout(() => this.initialize(), 150);\n      return;\n    }\n\n    const { cast } = window;\n\n    const context = cast.framework.CastContext.getInstance();\n\n    // Set Cast options\n    context.setOptions({\n      receiverApplicationId: this.params.applicationId,\n      // autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n      autoJoinPolicy: 'origin_scoped',\n      language: 'en'\n    });\n\n    this.sessionRequest = context.requestSession();\n\n    this.sessionRequest\n      .then((e) => {\n        debugger\n      })\n      .catch((e) => {\n        debugger\n      });\n\n    // this.sessionRequest = new chrome.cast.SessionRequest(this.params.applicationId);\n\n    // // DELETED\n    // this.apiConfig = new chrome.cast.ApiConfig(\n    //   this.sessionRequest,\n    //   (e) => this.sessionListener(e),\n    //   (e) => this.availabilityListener(e)\n    // );\n\n    // // DELETED\n    // chrome.cast.initialize(\n    //   this.apiConfig,\n    //   (e) => this.onInitSuccess(e),\n    //   (e) => this.onError(e)\n    // );\n  }\n\n  onInitSuccess(e) {\n    this.$events.$emit('onInitSuccess', e);\n  }\n\n  onError(message) {\n    this.log(`onError: ${JSON.stringify(message)}`);\n\n    // Erase the local session in case mismatch with the receiver\n    if (message.code === 'invalid_parameter' || message.code === 'timeout') {\n      this.session = null;\n    }\n\n    if (message.code) {\n      this.$events.$emit('sessionUpdate', message.code);\n    }\n  }\n\n  onSuccess(message) {\n    this.log(`onSuccess: ${JSON.stringify(message)}`);\n\n    if (message.callback) {\n      message.callback();\n    }\n  }\n\n  sessionListener(e) {\n    this.log(`New session ID: ${e.sessionId}`);\n    this.session = e;\n    this.session.addUpdateListener((e) => this.sessionUpdateListener);\n\n    this.$events.$emit('sessionUpdate', 'new');\n  }\n\n  sessionUpdateListener(isAlive) {\n    const sessionStatus = isAlive ? 'updated' : 'removed';\n\n    this.log(`Session ${sessionStatus}: ${this.session.sessionId}`);\n\n    if (!isAlive) {\n      this.session = null;\n    }\n\n    this.$events.$emit('sessionUpdate', sessionStatus);\n  }\n\n  availabilityListener(e) {\n    console.log('availabilityListener', e);\n    this.$events.$emit('availabilityListener', e);\n  }\n\n  sendMessage(message) {\n    if (this.session !== null) {\n      this.session.sendMessage(\n        this.params.applicationNamespace,\n        message,\n        () => this.onSuccess(message),\n        (e) => this.onError(e)\n      );\n    } else {\n      chrome.cast.requestSession((e) => {\n        this.session = e;\n        this.sessionListener(e);\n\n        this.session.sendMessage(\n          this.params.applicationNamespace,\n          message,\n          () => this.onSuccess(message),\n          (e) => this.onError(e)\n        );\n\n      }, (e) => this.onError(e));\n    }\n  }\n\n  cast(callback) {\n    // If isn't a google chrome browser, obviously don't even try\n    if (chrome) {\n      this.sendMessage({ callback });\n      this.$events.$emit('sessionUpdate', 'connecting');\n    }\n  }\n\n  stopCasting(callback) {\n    // If isn't a google chrome browser, obviously don't even try\n    if (!chrome) {\n      return;\n    }\n\n    this.$events.$emit('sessionUpdate', 'disconnecting');\n\n    // Ugly piece shit of code below, but we need to listen any case during\n    // disconnection in order to provide a rapid and certain connection\n    // from the UI.\n    if (this.session) {\n      this.session.stop((e) => {\n        this.session = null;\n        if (callback) {\n          callback(e);\n        }\n        this.$events.$emit('sessionUpdate', 'disconnected');\n      }, (e) => this.onError(e));\n    } else if (callback) {\n      callback();\n      this.$events.$emit('sessionUpdate', 'disconnected');\n    }\n  }\n}\n\nclass Receiver {\n  constructor(params) {\n    this.log = log;\n    this.params = params;\n\n    this.loadScript();\n    this.initialize();\n  }\n\n  loadScript() {\n    // Inject chromecast script\n    const castScript = document.createElement('script');\n\n    castScript.src = '//www.gstatic.com/cast/sdk/libs/caf_receiver/v3/' +\n      'cast_receiver_framework.js';\n    document.getElementsByTagName('head')[0].appendChild(castScript);\n  }\n\n  initialize() {\n    if (!window.cast || !window.cast.framework.CastReceiverContext) {\n      setTimeout(this.initialize.bind(this), 150);\n      return;\n    }\n\n    const { cast } = window;\n\n    const context = cast.framework.CastReceiverContext.getInstance();\n    const playerManager = context.getPlayerManager();\n\n    // intercept the LOAD request to be able to read in a contentId and get data\n    playerManager.setMessageInterceptor(\n      cast.framework.messages.MessageType.LOAD, loadRequestData => {\n        debugger;\n        if (loadRequestData.media && loadRequestData.media.contentId) {\n          debugger;\n        }\n        return loadRequestData;\n      });\n\n    // listen to all Core Events\n    playerManager.addEventListener(cast.framework.events.category.CORE,\n      event => {\n        console.log(event);\n      });\n\n    debugger\n\n    // this.castReceiverManager = cast.receiver.CastReceiverManager.getInstance();\n\n    // this.log('Starting Receiver Manager');\n\n    // this.castReceiverManager.onReady = (event) => {\n    //   this.log(`Received Ready event: ${JSON.stringify(event.data)}`);\n    //   this.castReceiverManager.setApplicationState(`${this.params.applicationName} is ready...`);\n    // };\n\n    // this.castReceiverManager.onSenderConnected = (event) => {\n    //   this.log(`Received Sender Connected event: ${event.senderId}`);\n    // };\n\n    // this.castReceiverManager.onSenderDisconnected = (event) => {\n    //   this.log(`Received Sender Disconnected event: ${event.senderId}`);\n    // };\n\n    // this.messageBus = this.castReceiverManager.getCastMessageBus(\n    //   this.params.applicationNamespace,\n    //   cast.receiver.CastMessageBus.MessageType.JSON\n    // );\n\n    // this.messageBus.onMessage = (event) => {\n    //   this.log(`Message [${event.senderId}]: ${event.data}`);\n\n    //   if (event.data.method) {\n    //     this.$events.$emit('message', JSON.stringify(event.data));\n    //   }\n    // };\n\n    // Initialize the CastReceiverManager with an application status message.\n    // this.castReceiverManager.start({ statusText: 'Application is starting' });\n\n    this.log('Receiver Manager started');\n  }\n}\n\nexport { Sender, Receiver };\n\n\n\n// WEBPACK FOOTER //\n// ./src/chromecast-sdk.js"],"sourceRoot":""}