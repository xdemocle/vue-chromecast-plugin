{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap bcbc70564032d124b934","webpack:///./src/index.js","webpack:///./src/utils.js","webpack:///./src/chromecast-sdk.js"],"names":["install","Vue","options","$chromecast","applicationId","applicationName","applicationNamespace","VueEvents","Events","prototype","$events","checkIfChromecast","Receiver","Sender","$on","eventName","eventHandler","methods","emit","event","args","$emit","on","callback","off","$off","navigator","userAgent","indexOf","window","chrome","cast","console","log","params","session","initialize","isAvailable","setTimeout","constructor","sessionRequest","SessionRequest","apiConfig","ApiConfig","e","sessionListener","availabilityListener","onInitSuccess","onError","message","JSON","stringify","code","sessionId","addUpdateListener","sessionUpdateListener","isAlive","sessionStatus","sendMessage","onSuccess","requestSession","stop","receiver","logger","setLevelValue","castReceiverManager","CastReceiverManager","getInstance","onReady","data","setApplicationState","onSenderConnected","senderId","onSenderDisconnected","messageBus","getCastMessageBus","CastMessageBus","MessageType","onMessage","method","start","statusText"],"mappings":"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","file":"vue-chromecast-plugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-chromecast-plugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-chromecast-plugin\"] = factory();\n\telse\n\t\troot[\"vue-chromecast-plugin\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bcbc70564032d124b934","import Utils from './utils';\nimport { Sender, Receiver } from './chromecast-sdk';\n\nexport default {\n  install(Vue, options) {\n    const $chromecast = {};\n    const { applicationId, applicationName, applicationNamespace } = options;\n\n    const VueEvents = new Utils.Events(Vue);\n\n    Sender.prototype.$events = VueEvents.$events;\n    Receiver.prototype.$events = VueEvents.$events;\n\n    if (Utils.checkIfChromecast()) {\n      $chromecast.Receiver = new Receiver({\n        applicationName,\n        applicationNamespace\n      });\n    } else {\n      $chromecast.Sender = new Sender({\n        applicationId,\n        applicationNamespace\n      });\n    }\n\n    $chromecast.$on = (eventName, eventHandler) => {\n      VueEvents.$events.$on(eventName, eventHandler);\n    };\n\n    // Register the vue plugin\n    Vue.prototype.$chromecast = $chromecast;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","class Events {\n  constructor(Vue) {\n    this.$events = new Vue({\n      methods: {\n        /**\n         * Emit the given event.\n         *\n         * @param {string|object} event\n         * @param {...*} args\n         */\n        emit(event, ...args) {\n          this.$emit(event, ...args);\n        },\n\n        /**\n         * Listen for the given event.\n         *\n         * @param {string} event\n         * @param {function} callback\n         */\n        on(event, callback) {\n          this.$on(event, callback);\n        },\n\n        /**\n         * Remove one or more event listeners.\n         *\n         * @param {string} event\n         * @param {function} callback\n         */\n        off(event, callback) {\n          this.$off(event, callback);\n        }\n      }\n    });\n  }\n}\n\nfunction checkIfChromecast() {\n  return navigator.userAgent.indexOf('CrKey') !== -1;\n}\n\nexport default { Events, checkIfChromecast };\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","const { chrome, cast } = window;\nconst { log } = console;\n\nclass Sender {\n  constructor(params) {\n    this.log = log;\n    this.session = null;\n    this.params = params;\n\n    // If isn't a google chrome browser, obviously don't even try to start\n    // ChromeCast Web SDK.\n    if (chrome) {\n      this.initialize();\n    }\n  }\n\n  initialize() {\n    if (!chrome.cast || !chrome.cast.isAvailable) {\n      setTimeout(() => {\n        this.constructor(this.params);\n      }, 150);\n      return;\n    }\n\n    this.sessionRequest = new chrome.cast.SessionRequest(this.params.applicationId);\n\n    this.apiConfig = new chrome.cast.ApiConfig(\n      this.sessionRequest,\n      (e) => this.sessionListener(e),\n      (e) => this.availabilityListener(e)\n    );\n\n    chrome.cast.initialize(\n      this.apiConfig,\n      (e) => this.onInitSuccess(e),\n      (e) => this.onError(e)\n    );\n  }\n\n  onInitSuccess(e) {\n    this.$events.$emit('onInitSuccess', e);\n  }\n\n  onError(message) {\n    this.log(`onError: ${JSON.stringify(message)}`);\n\n    // Erase the local session in case mismatch with the receiver\n    if (message.code === 'invalid_parameter' || message.code === 'timeout') {\n      this.session = null;\n    }\n\n    if (message.code) {\n      this.$events.$emit('sessionUpdate', message.code);\n    }\n  }\n\n  onSuccess(message) {\n    this.log(`onSuccess: ${JSON.stringify(message)}`);\n\n    if (message.callback) {\n      message.callback();\n    }\n  }\n\n  sessionListener(e) {\n    this.log(`New session ID: ${e.sessionId}`);\n    this.session = e;\n    this.session.addUpdateListener((e) => this.sessionUpdateListener);\n\n    this.$events.$emit('sessionUpdate', 'new');\n  }\n\n  sessionUpdateListener(isAlive) {\n    const sessionStatus = isAlive ? 'updated' : 'removed';\n\n    this.log(`Session ${sessionStatus}: ${this.session.sessionId}`);\n\n    if (!isAlive) {\n      this.session = null;\n    }\n\n    this.$events.$emit('sessionUpdate', sessionStatus);\n  }\n\n  availabilityListener(e) {\n    this.$events.$emit('availabilityListener', e);\n  }\n\n  sendMessage(message) {\n    if (this.session !== null) {\n      this.session.sendMessage(\n        this.params.applicationNamespace,\n        message,\n        () => this.onSuccess(message),\n        (e) => this.onError(e)\n      );\n    } else {\n      chrome.cast.requestSession((e) => {\n        this.session = e;\n        this.sessionListener(e);\n\n        this.session.sendMessage(\n          this.params.applicationNamespace,\n          message,\n          () => this.onSuccess(message),\n          (e) => this.onError(e)\n        );\n\n      }, (e) => this.onError(e));\n    }\n  }\n\n  cast(callback) {\n    // If isn't a google chrome browser, obviously don't even try\n    if (chrome) {\n      this.sendMessage({ callback });\n      this.$events.$emit('sessionUpdate', 'connecting');\n    }\n  }\n\n  stopCasting(callback) {\n    // If isn't a google chrome browser, obviously don't even try\n    if (!chrome) {\n      return;\n    }\n\n    this.$events.$emit('sessionUpdate', 'disconnecting');\n\n    // Ugly piece shit of code below, but we need to listen any case during\n    // disconnection in order to provide a rapid and certain connection\n    // from the UI.\n    if (this.session) {\n      this.session.stop((e) => {\n        this.session = null;\n        if (callback) {\n          callback(e);\n        }\n        this.$events.$emit('sessionUpdate', 'disconnected');\n      }, (e) => this.onError(e));\n    } else if (callback) {\n      callback();\n      this.$events.$emit('sessionUpdate', 'disconnected');\n    }\n  }\n}\n\nclass Receiver {\n  constructor(params) {\n    this.log = log;\n    this.params = params;\n    this.initialize();\n  }\n\n  initialize() {\n    if (!cast || !cast.receiver) {\n      setTimeout(() => {\n        this.constructor();\n      }, 150);\n      return;\n    }\n\n    cast.receiver.logger.setLevelValue(0);\n\n    this.castReceiverManager = cast.receiver.CastReceiverManager.getInstance();\n\n    this.log('Starting Receiver Manager');\n\n    this.castReceiverManager.onReady = (event) => {\n      this.log(`Received Ready event: ${JSON.stringify(event.data)}`);\n      this.castReceiverManager.setApplicationState(`${this.params.applicationName} is ready...`);\n    };\n\n    this.castReceiverManager.onSenderConnected = (event) => {\n      this.log(`Received Sender Connected event: ${event.senderId}`);\n    };\n\n    this.castReceiverManager.onSenderDisconnected = (event) => {\n      this.log(`Received Sender Disconnected event: ${event.senderId}`);\n    };\n\n    this.messageBus = this.castReceiverManager.getCastMessageBus(\n      this.params.applicationNamespace,\n      cast.receiver.CastMessageBus.MessageType.JSON\n    );\n\n    this.messageBus.onMessage = (event) => {\n      this.log(`Message [${event.senderId}]: ${event.data}`);\n\n      if (event.data.method) {\n        this.$events.$emit('message', JSON.stringify(event.data));\n      }\n    };\n\n    // Initialize the CastReceiverManager with an application status message.\n    this.castReceiverManager.start({ statusText: 'Application is starting' });\n\n    this.log('Receiver Manager started');\n  }\n}\n\nexport { Sender, Receiver };\n\n\n\n// WEBPACK FOOTER //\n// ./src/chromecast-sdk.js"],"sourceRoot":""}