{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0de610465f36313381bb","webpack:///./src/index.js","webpack:///./src/utils.js","webpack:///./src/chromecast-sdk.js"],"names":["install","Vue","options","$chromecast","VueEvents","Events","prototype","$events","checkIfChromecast","Receiver","Sender","$on","eventName","eventHandler","methods","emit","event","args","$emit","on","callback","off","$off","navigator","userAgent","indexOf","console","log","window","chrome","params","loadScript","isAvailable","initialize","castScript","document","createElement","src","getElementsByTagName","appendChild","cast","framework","setTimeout","bind","context","CastContext","getInstance","setLoggerLevel","setOptions","receiverApplicationId","appId","autoJoinPolicy","AutoJoinPolicy","ORIGIN_SCOPED","language","eventListeners","addEventListener","CastContextEventType","CAST_STATE_CHANGED","response","stateChangedHandler","SESSION_STATE_CHANGED","sessionState","type","castSession","getCurrentSession","getSessionId","JSON","stringify","requestSession","message","sendMessage","appNamespace","then","onMessageSuccess","catch","e","onMessageError","endSession","code","CastReceiverOptions","maxInactivity","CastReceiverContext","registerListenersCore","setInactivityTimeout","start","addCustomMessageListener","customEvent","dataStringified","data","method","senderId"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;;;;AACA;;;;kBAEe;AACbA,SADa,mBACLC,GADK,EACAC,OADA,EACS;AACpB,QAAMC,cAAc,EAApB;;AAEA,QAAMC,YAAY,IAAI,gBAAMC,MAAV,CAAiBJ,GAAjB,CAAlB;;AAEA,0BAAOK,SAAP,CAAiBC,OAAjB,GAA2BH,UAAUG,OAArC;AACA,4BAASD,SAAT,CAAmBC,OAAnB,GAA6BH,UAAUG,OAAvC;;AAEA,QAAI,gBAAMC,iBAAN,EAAJ,EAA+B;AAC7BL,kBAAYM,QAAZ,GAAuB,4BAAaP,OAAb,CAAvB;AACD,KAFD,MAEO;AACLC,kBAAYO,MAAZ,GAAqB,0BAAWR,OAAX,CAArB;AACD;;AAEDC,gBAAYQ,GAAZ,GAAkB,UAACC,SAAD,EAAYC,YAAZ,EAA6B;AAC7CT,gBAAUG,OAAV,CAAkBI,GAAlB,CAAsBC,SAAtB,EAAiCC,YAAjC;AACD,KAFD;;AAIA;AACAZ,QAAIK,SAAJ,CAAcH,WAAd,GAA4BA,WAA5B;AACD;AArBY,C;;;;;;;;;;;;;;;;;;ICHTE,M,GACJ,gBAAYJ,GAAZ,EAAiB;AAAA;;AACf,OAAKM,OAAL,GAAe,IAAIN,GAAJ,CAAQ;AACrBa,aAAS;AACP;;;;;;AAMAC,UAPO,gBAOFC,KAPE,EAOc;AAAA,0CAANC,IAAM;AAANA,cAAM;AAAA;;AACnB,aAAKC,KAAL,cAAWF,KAAX,4BAAqBC,IAArB;AACD,OATM;;;AAWP;;;;;;AAMAE,QAjBO,cAiBJH,KAjBI,EAiBGI,QAjBH,EAiBa;AAClB,aAAKT,GAAL,CAASK,KAAT,EAAgBI,QAAhB;AACD,OAnBM;;;AAqBP;;;;;;AAMAC,SA3BO,eA2BHL,KA3BG,EA2BII,QA3BJ,EA2Bc;AACnB,aAAKE,IAAL,CAAUN,KAAV,EAAiBI,QAAjB;AACD;AA7BM;AADY,GAAR,CAAf;AAiCD,C;;AAGH,SAASZ,iBAAT,GAA6B;AAC3B,SAAOe,UAAUC,SAAV,CAAoBC,OAApB,CAA4B,OAA5B,MAAyC,CAAC,CAAjD;AACD;;kBAEc,EAAEpB,cAAF,EAAUG,oCAAV,E;;;;;;;;;;;;;;;;;;eC1CCkB,O;IAARC,G,YAAAA,G;cACWC,M;IAAXC,M,WAAAA,M;;IAEFnB,M;AACJ,kBAAYoB,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKG,MAAL,GAAcA,MAAd;;AAEA;AACA;AACA,QAAID,MAAJ,EAAY;AACV,WAAKE,UAAL;;AAEAH,aAAO,uBAAP,IAAkC,UAACI,WAAD,EAAiB;AACjD,YAAIA,WAAJ,EAAiB;AACf,gBAAKC,UAAL;AACD;AACF,OAJD;AAKD;AACF;;;;iCAEY;AACX;AACA,UAAMC,aAAaC,SAASC,aAAT,CAAuB,QAAvB,CAAnB;;AAEAF,iBAAWG,GAAX,GAAiB,qDACf,sBADF;AAEAF,eAASG,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDL,UAArD;AACD;;;iCAEY;AAAA,qBACcN,MADd;AAAA,UACHY,IADG,YACHA,IADG;AAAA,UACGX,MADH,YACGA,MADH;;;AAGX,UAAI,CAACW,IAAD,IAAS,CAACA,KAAKC,SAAnB,EAA8B;AAC5BC,mBAAW,KAAKT,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,CAAX,EAAuC,GAAvC;AACA;AACD;;AAED,WAAKC,OAAL,GAAeJ,KAAKC,SAAL,CAAeI,WAAf,CAA2BC,WAA3B,EAAf;;AAEAN,WAAKC,SAAL,CAAeM,cAAf,CAA8B,CAA9B;;AAEA;AACA,WAAKH,OAAL,CAAaI,UAAb,CAAwB;AACtBC,+BAAuB,KAAKnB,MAAL,CAAYoB,KADb;AAEtBC,wBAAgBtB,OAAOW,IAAP,CAAYY,cAAZ,CAA2BC,aAFrB;AAGtBC,kBAAU;AAHY,OAAxB;;AAMA,WAAKC,cAAL;AACD;;;qCAEgB;AAAA;;AAAA,qBACE3B,MADF;AAAA,UACPY,IADO,YACPA,IADO;;;AAGf,WAAKI,OAAL,CAAaY,gBAAb,CACEhB,KAAKC,SAAL,CAAegB,oBAAf,CAAoCC,kBADtC,EAEE,UAACC,QAAD;AAAA,eAAc,OAAKC,mBAAL,CAAyBD,QAAzB,CAAd;AAAA,OAFF;;AAKA,WAAKf,OAAL,CAAaY,gBAAb,CACEhB,KAAKC,SAAL,CAAegB,oBAAf,CAAoCI,qBADtC,EAEE,UAACF,QAAD;AAAA,eAAc,OAAKC,mBAAL,CAAyBD,QAAzB,CAAd;AAAA,OAFF;AAID;;;wCAEmBA,Q,EAAU;AAAA,qBACX/B,MADW;AAAA,UACpBY,IADoB,YACpBA,IADoB;;;AAG5B,UAAImB,SAASG,YAAb,EAA2B;AACzB,aAAKvD,OAAL,CAAaW,KAAb,CAAmByC,SAASI,IAA5B,EAAkCJ,SAASG,YAA3C;AACD;;AAED,UAAIH,SAASI,IAAT,KAAkB,qBAAtB,EAA6C;AAC3C,YAAMC,cAAcxB,KAAKC,SAAL,CAAeI,WAAf,CAA2BC,WAA3B,GAAyCmB,iBAAzC,EAApB;;AAEA,aAAKtC,GAAL,gBAAsBgC,SAASG,YAA/B,WAAgDE,eAAeA,YAAYE,YAAZ,EAAf,IAA6C,KAA7F;AACD,OAJD,MAIO;AACL,aAAKvC,GAAL,cAAoBgC,SAASI,IAA7B,UAAsCI,KAAKC,SAAL,CAAeT,QAAf,CAAtC;AACD;AACF;;;qCAEgB;AACf,aAAO,KAAKf,OAAL,CAAayB,cAAb,EAAP;AACD;;;gCAEWC,O,EAAS;AAAA;;AAAA,qBACF1C,MADE;AAAA,UACXY,IADW,YACXA,IADW;;AAEnB,UAAMwB,cAAcxB,KAAKC,SAAL,CAAeI,WAAf,CAA2BC,WAA3B,GAAyCmB,iBAAzC,EAApB;;AAEA,aAAOD,YAAYO,WAAZ,CAAwB,KAAKzC,MAAL,CAAY0C,YAApC,EAAkDF,OAAlD,EACJG,IADI,CACC;AAAA,eAAM,OAAKC,gBAAL,CAAsBJ,OAAtB,CAAN;AAAA,OADD,EAEJK,KAFI,CAEE,UAACC,CAAD;AAAA,eAAO,OAAKC,cAAL,CAAoBD,CAApB,CAAP;AAAA,OAFF,CAAP;AAGD;;;8BAES;AACR;AACA,UAAI/C,MAAJ,EAAY;AACV,eAAO,KAAKwC,cAAL,EAAP;AACD;;AAED,aAAO,EAAP;AACD;;;gCAEWjD,Q,EAAU;AAAA,qBACKQ,MADL;AAAA,UACZY,IADY,YACZA,IADY;AAAA,UACNX,MADM,YACNA,MADM;;AAGpB;;AACA,UAAI,CAACA,MAAL,EAAa;AAAE;AAAS;;AAExB,WAAKtB,OAAL,CAAaW,KAAb,CAAmB,qBAAnB,EAA0C,gBAA1C;;AAEA,UAAM8C,cAAcxB,KAAKC,SAAL,CAAeI,WAAf,CAA2BC,WAA3B,GAAyCmB,iBAAzC,EAApB;;AAEA,UAAID,WAAJ,EAAiB;AACf;AACA;AACAA,oBAAYc,UAAZ,CAAuB,IAAvB;AACA,YAAI1D,QAAJ,EAAc;AAAEA;AAAa;AAC9B,OALD,MAKO,IAAIA,QAAJ,EAAc;AACnB,aAAKwC,mBAAL,CAAyB;AACvBE,wBAAc,eADS;AAEvBC,gBAAM;AAFiB,SAAzB;;AAKA3C;AACD;AACF;;;mCAEckD,O,EAAS;AACtB,UAAIA,QAAQS,IAAZ,EAAkB;AAChB,aAAKxE,OAAL,CAAaW,KAAb,CAAmB,qBAAnB,EAA0CoD,QAAQS,IAAlD;AACD;;AAED,WAAKpD,GAAL,sBAA4BwC,KAAKC,SAAL,CAAeE,OAAf,CAA5B;AACD;;;qCAEgBA,O,EAAS;AACxB,WAAK3C,GAAL,iBAAuBwC,KAAKC,SAAL,CAAeE,OAAf,CAAvB;;AAEA,UAAIA,QAAQlD,QAAZ,EAAsB;AACpBkD,gBAAQlD,QAAR;AACD;AACF;;;;;;IAGGX,Q;AACJ,oBAAYqB,MAAZ,EAAoB;AAAA;;AAClB,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKG,MAAL,GAAcA,MAAd;;AAEA,SAAKC,UAAL;AACA,SAAKE,UAAL;AACD;;;;iCAEY;AACX;AACA,UAAMC,aAAaC,SAASC,aAAT,CAAuB,QAAvB,CAAnB;;AAEAF,iBAAWG,GAAX,GAAiB,qDACf,4BADF;AAEAF,eAASG,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDL,UAArD;AACD;;;iCAEY;AAAA,qBACMN,MADN;AAAA,UACHY,IADG,YACHA,IADG;;;AAGX,UAAI,CAACA,IAAD,IAAS,CAACA,KAAKC,SAAnB,EAA8B;AAC5BC,mBAAW,KAAKT,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,CAAX,EAAuC,GAAvC;AACA;AACD;;AAED,UAAMzC,UAAU,IAAIsC,KAAKC,SAAL,CAAeuC,mBAAnB,EAAhB;;AAEA;AACA9E,cAAQ+E,aAAR,GAAwB,KAAKnD,MAAL,CAAYmD,aAAZ,IAA6B,QAArD;;AAEA,UAAMrC,UAAUJ,KAAKC,SAAL,CAAeyC,mBAAf,CAAmCpC,WAAnC,EAAhB;;AAEA,WAAKqC,qBAAL,CAA2BvC,OAA3B;;AAEA;AACAA,cAAQwC,oBAAR,CAA6B,KAAKtD,MAAL,CAAYmD,aAAZ,IAA6B,QAA1D;;AAEArC,cAAQyC,KAAR,CAAcnF,OAAd;AACD;;;0CAEqB0C,O,EAAS;AAAA;;AAC7BA,cAAQ0C,wBAAR,CAAiC,KAAKxD,MAAL,CAAY0C,YAA7C,EAA2D,UAACe,WAAD,EAAiB;AAC1E,YAAMC,kBAAkBrB,KAAKC,SAAL,CAAemB,YAAYE,IAA3B,CAAxB;;AAEA,YAAIF,YAAYE,IAAZ,CAAiBC,MAArB,EAA6B;AAC3B,iBAAKnF,OAAL,CAAaW,KAAb,CAAmB,SAAnB,EAA8BsE,eAA9B;AACD;;AAED,eAAK7D,GAAL,eAAqB4D,YAAYI,QAAjC,WAA+CH,eAA/C;AACD,OARD;AASD;;;;;;QAGM9E,M,GAAAA,M;QAAQD,Q,GAAAA,Q","file":"vue-chromecast-plugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-chromecast-plugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-chromecast-plugin\"] = factory();\n\telse\n\t\troot[\"vue-chromecast-plugin\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0de610465f36313381bb","import Utils from './utils';\nimport { Sender, Receiver } from './chromecast-sdk';\n\nexport default {\n  install(Vue, options) {\n    const $chromecast = {};\n\n    const VueEvents = new Utils.Events(Vue);\n\n    Sender.prototype.$events = VueEvents.$events;\n    Receiver.prototype.$events = VueEvents.$events;\n\n    if (Utils.checkIfChromecast()) {\n      $chromecast.Receiver = new Receiver(options);\n    } else {\n      $chromecast.Sender = new Sender(options);\n    }\n\n    $chromecast.$on = (eventName, eventHandler) => {\n      VueEvents.$events.$on(eventName, eventHandler);\n    };\n\n    // Register the vue plugin\n    Vue.prototype.$chromecast = $chromecast;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","class Events {\n  constructor(Vue) {\n    this.$events = new Vue({\n      methods: {\n        /**\n         * Emit the given event.\n         *\n         * @param {string|object} event\n         * @param {...*} args\n         */\n        emit(event, ...args) {\n          this.$emit(event, ...args);\n        },\n\n        /**\n         * Listen for the given event.\n         *\n         * @param {string} event\n         * @param {function} callback\n         */\n        on(event, callback) {\n          this.$on(event, callback);\n        },\n\n        /**\n         * Remove one or more event listeners.\n         *\n         * @param {string} event\n         * @param {function} callback\n         */\n        off(event, callback) {\n          this.$off(event, callback);\n        }\n      }\n    });\n  }\n}\n\nfunction checkIfChromecast() {\n  return navigator.userAgent.indexOf('CrKey') !== -1;\n}\n\nexport default { Events, checkIfChromecast };\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","const { log } = console;\nconst { chrome } = window;\n\nclass Sender {\n  constructor(params) {\n    this.log = log;\n    this.params = params;\n\n    // If isn't a google chrome browser, obviously don't even try to start\n    // ChromeCast Web SDK.\n    if (chrome) {\n      this.loadScript();\n\n      window['__onGCastApiAvailable'] = (isAvailable) => {\n        if (isAvailable) {\n          this.initialize();\n        }\n      };\n    }\n  }\n\n  loadScript() {\n    // Inject chromecast script\n    const castScript = document.createElement('script');\n\n    castScript.src = '//www.gstatic.com/cv/js/sender/v1/cast_sender.js' +\n      '?loadCastFramework=1';\n    document.getElementsByTagName('head')[0].appendChild(castScript);\n  }\n\n  initialize() {\n    const { cast, chrome } = window;\n\n    if (!cast || !cast.framework) {\n      setTimeout(this.initialize.bind(this), 150);\n      return;\n    }\n\n    this.context = cast.framework.CastContext.getInstance();\n\n    cast.framework.setLoggerLevel(0);\n\n    // Set Cast options\n    this.context.setOptions({\n      receiverApplicationId: this.params.appId,\n      autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n      language: 'en'\n    });\n\n    this.eventListeners();\n  }\n\n  eventListeners() {\n    const { cast } = window;\n\n    this.context.addEventListener(\n      cast.framework.CastContextEventType.CAST_STATE_CHANGED,\n      (response) => this.stateChangedHandler(response)\n    );\n\n    this.context.addEventListener(\n      cast.framework.CastContextEventType.SESSION_STATE_CHANGED,\n      (response) => this.stateChangedHandler(response)\n    );\n  }\n\n  stateChangedHandler(response) {\n    const { cast } = window;\n\n    if (response.sessionState) {\n      this.$events.$emit(response.type, response.sessionState);\n    }\n\n    if (response.type === 'sessionstatechanged') {\n      const castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n\n      this.log(`[SESSION] ${response.sessionState}: ${castSession && castSession.getSessionId() || '...'}`);\n    } else {\n      this.log(`[DEBUG] ${response.type}: ${JSON.stringify(response)}`);\n    }\n  }\n\n  requestSession() {\n    return this.context.requestSession();\n  }\n\n  sendMessage(message) {\n    const { cast } = window;\n    const castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n\n    return castSession.sendMessage(this.params.appNamespace, message)\n      .then(() => this.onMessageSuccess(message))\n      .catch((e) => this.onMessageError(e));\n  }\n\n  casting() {\n    // If isn't a google chrome browser, obviously don't even try\n    if (chrome) {\n      return this.requestSession();\n    }\n\n    return {};\n  }\n\n  stopCasting(callback) {\n    const { cast, chrome } = window;\n\n    // If isn't a google chrome browser, obviously don't even try\n    if (!chrome) { return; }\n\n    this.$events.$emit('sessionstatechanged', 'SESSION_ENDING');\n\n    const castSession = cast.framework.CastContext.getInstance().getCurrentSession();\n\n    if (castSession) {\n      // End the session and pass 'true' to indicate\n      // that receiver application should be stopped.\n      castSession.endSession(true);\n      if (callback) { callback(); }\n    } else if (callback) {\n      this.stateChangedHandler({\n        sessionState: 'SESSION_ENDED',\n        type: 'sessionstatechanged'\n      });\n\n      callback();\n    }\n  }\n\n  onMessageError(message) {\n    if (message.code) {\n      this.$events.$emit('sessionstatechanged', message.code);\n    }\n\n    this.log(`onMessageError: ${JSON.stringify(message)}`);\n  }\n\n  onMessageSuccess(message) {\n    this.log(`onSuccess: ${JSON.stringify(message)}`);\n\n    if (message.callback) {\n      message.callback();\n    }\n  }\n}\n\nclass Receiver {\n  constructor(params) {\n    this.log = log;\n    this.params = params;\n\n    this.loadScript();\n    this.initialize();\n  }\n\n  loadScript() {\n    // Inject chromecast script\n    const castScript = document.createElement('script');\n\n    castScript.src = '//www.gstatic.com/cast/sdk/libs/caf_receiver/v3/' +\n      'cast_receiver_framework.js';\n    document.getElementsByTagName('head')[0].appendChild(castScript);\n  }\n\n  initialize() {\n    const { cast } = window;\n\n    if (!cast || !cast.framework) {\n      setTimeout(this.initialize.bind(this), 150);\n      return;\n    }\n\n    const options = new cast.framework.CastReceiverOptions();\n\n    // Set inactivity at 6 hours if option maxInactivity is not passed\n    options.maxInactivity = this.params.maxInactivity || 21600000;\n\n    const context = cast.framework.CastReceiverContext.getInstance();\n\n    this.registerListenersCore(context);\n\n    // Set inactivity at 6 hours if option maxInactivity is not passed\n    context.setInactivityTimeout(this.params.maxInactivity || 21600000);\n\n    context.start(options);\n  }\n\n  registerListenersCore(context) {\n    context.addCustomMessageListener(this.params.appNamespace, (customEvent) => {\n      const dataStringified = JSON.stringify(customEvent.data);\n\n      if (customEvent.data.method) {\n        this.$events.$emit('message', dataStringified);\n      }\n\n      this.log(`Message [${customEvent.senderId}]: ${dataStringified}`);\n    });\n  }\n}\n\nexport { Sender, Receiver };\n\n\n\n// WEBPACK FOOTER //\n// ./src/chromecast-sdk.js"],"sourceRoot":""}