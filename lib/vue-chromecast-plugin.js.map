{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9501688077094de62874","webpack:///./src/index.js","webpack:///./src/utils.js","webpack:///./src/chromecast-sdk.js"],"names":["install","Vue","options","$chromecast","VueEvents","Events","prototype","$events","checkIfChromecast","Receiver","Sender","$on","eventName","eventHandler","methods","emit","event","args","$emit","on","callback","off","$off","navigator","userAgent","indexOf","console","log","params","session","window","chrome","loadScript","isAvailable","initialize","castScript","document","createElement","src","getElementsByTagName","appendChild","cast","framework","setTimeout","bind","context","CastContext","getInstance","setLoggerLevel","setOptions","receiverApplicationId","appId","autoJoinPolicy","AutoJoinPolicy","ORIGIN_SCOPED","language","addEventListener","CastContextEventType","CAST_STATE_CHANGED","response","stateChangedHandler","SESSION_STATE_CHANGED","requestSession","then","sessionState","getSessionObj","type","sessionId","JSON","stringify","message","sendMessage","appNamespace","onMessageSuccess","e","onMessageError","endCurrentSession","code","CastReceiverOptions","maxInactivity","CastReceiverContext","addCustomMessageListener","customEvent","dataStringified","data","method","senderId","start"],"mappings":"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","file":"vue-chromecast-plugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-chromecast-plugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-chromecast-plugin\"] = factory();\n\telse\n\t\troot[\"vue-chromecast-plugin\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9501688077094de62874","import Utils from './utils';\nimport { Sender, Receiver } from './chromecast-sdk';\n\nexport default {\n  install(Vue, options) {\n    const $chromecast = {};\n\n    const VueEvents = new Utils.Events(Vue);\n\n    Sender.prototype.$events = VueEvents.$events;\n    Receiver.prototype.$events = VueEvents.$events;\n\n    if (Utils.checkIfChromecast()) {\n      $chromecast.Receiver = new Receiver(options);\n    } else {\n      $chromecast.Sender = new Sender(options);\n    }\n\n    $chromecast.$on = (eventName, eventHandler) => {\n      VueEvents.$events.$on(eventName, eventHandler);\n    };\n\n    // Register the vue plugin\n    Vue.prototype.$chromecast = $chromecast;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","class Events {\n  constructor(Vue) {\n    this.$events = new Vue({\n      methods: {\n        /**\n         * Emit the given event.\n         *\n         * @param {string|object} event\n         * @param {...*} args\n         */\n        emit(event, ...args) {\n          this.$emit(event, ...args);\n        },\n\n        /**\n         * Listen for the given event.\n         *\n         * @param {string} event\n         * @param {function} callback\n         */\n        on(event, callback) {\n          this.$on(event, callback);\n        },\n\n        /**\n         * Remove one or more event listeners.\n         *\n         * @param {string} event\n         * @param {function} callback\n         */\n        off(event, callback) {\n          this.$off(event, callback);\n        }\n      }\n    });\n  }\n}\n\nfunction checkIfChromecast() {\n  return navigator.userAgent.indexOf('CrKey') !== -1;\n}\n\nexport default { Events, checkIfChromecast };\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","const { log } = console;\n\nclass Sender {\n  constructor(params) {\n    this.log = log;\n    this.session = null;\n    this.params = params;\n\n    // If isn't a google chrome browser, obviously don't even try to start\n    // ChromeCast Web SDK.\n    if (window.chrome) {\n      this.loadScript();\n\n      window['__onGCastApiAvailable'] = (isAvailable) => {\n        if (isAvailable) {\n          this.initialize();\n        }\n      };\n    }\n  }\n\n  loadScript() {\n    // Inject chromecast script\n    const castScript = document.createElement('script');\n\n    castScript.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js' +\n      '?loadCastFramework=1';\n    document.getElementsByTagName('head')[0].appendChild(castScript);\n  }\n\n  initialize() {\n    this.chrome = window.chrome;\n    this.cast = window.cast;\n\n    if (!this.cast || !this.cast.framework) {\n      setTimeout(this.initialize.bind(this), 150);\n      return;\n    }\n\n    this.context = this.cast.framework.CastContext.getInstance();\n\n    this.cast.framework.setLoggerLevel(0);\n\n    // Set Cast options\n    this.context.setOptions({\n      receiverApplicationId: this.params.appId,\n      autoJoinPolicy: this.chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,\n      language: 'en'\n    });\n\n    this.context.addEventListener(\n      this.cast.framework.CastContextEventType.CAST_STATE_CHANGED,\n      (response) => this.stateChangedHandler(response)\n    );\n\n    this.context.addEventListener(\n      this.cast.framework.CastContextEventType.SESSION_STATE_CHANGED,\n      (response) => this.stateChangedHandler(response)\n    );\n  }\n\n  requestSession(callback) {\n    this.context.requestSession().then(() => {\n      if (callback) {\n        callback();\n      }\n    });\n  }\n\n  stateChangedHandler(response) {\n    if (response.sessionState === 'SESSION_ENDED') {\n      this.session = null;\n    }\n\n    if (response.sessionState === 'SESSION_RESUMED' ||\n        response.sessionState === 'SESSION_STARTED') {\n      this.session = response.session.getSessionObj();\n    }\n\n    if (response.sessionState) {\n      this.$events.$emit(response.type, response.sessionState);\n    }\n\n    if (response.type === 'sessionstatechanged') {\n      this.log(`[SESSION] ${response.sessionState}: ${this.session && this.session.sessionId}`);\n    } else {\n      this.log(`[DEBUG] ${response.type}: ${JSON.stringify(response)}`);\n    }\n  }\n\n  sendMessage(message) {\n    if (this.session) {\n      this.session.sendMessage(\n        this.params.appNamespace,\n        message,\n        () => this.onMessageSuccess(message),\n        (e) => this.onMessageError(e)\n      );\n    } else {\n      this.requestSession(() => {\n        this.session.sendMessage(\n          this.params.appNamespace,\n          message,\n          () => this.onMessageSuccess(message),\n          (e) => this.onMessageError(e)\n        );\n      });\n    }\n  }\n\n  casting(callback) {\n    // If isn't a google chrome browser, obviously don't even try\n    if (this.chrome) {\n      this.requestSession(callback);\n    }\n  }\n\n  stopCasting(callback) {\n    // If isn't a google chrome browser, obviously don't even try\n    if (!this.chrome) { return; }\n\n    this.$events.$emit('sessionstatechanged', 'SESSION_ENDING');\n\n    if (this.session) {\n      this.context.endCurrentSession(true);\n    } else if (callback) {\n      this.stateChangedHandler({\n        sessionState: 'SESSION_ENDED',\n        type: 'sessionstatechanged'\n      });\n\n      callback();\n    }\n  }\n\n  onMessageError(message) {\n    this.log(`onMessageError: ${JSON.stringify(message)}`);\n\n    // Erase the local session in case mismatch with the receiver\n    if (\n      message.code === 'invalid_parameter' ||\n      message.code === 'timeout' ||\n      message.code === 'cancel'\n    ) {\n      this.session = null;\n    }\n\n    if (message.code) {\n      this.$events.$emit('sessionstatechanged', message.code);\n    }\n  }\n\n  onMessageSuccess(message) {\n    this.log(`onSuccess: ${JSON.stringify(message)}`);\n\n    if (message.callback) {\n      message.callback();\n    }\n  }\n}\n\nclass Receiver {\n  constructor(params) {\n    this.log = log;\n    this.params = params;\n\n    this.loadScript();\n    this.initialize();\n  }\n\n  loadScript() {\n    // Inject chromecast script\n    const castScript = document.createElement('script');\n\n    castScript.src = '//www.gstatic.com/cast/sdk/libs/caf_receiver/v3/' +\n      'cast_receiver_framework.js';\n    document.getElementsByTagName('head')[0].appendChild(castScript);\n  }\n\n  initialize() {\n    if (!window.cast || !window.cast.framework) {\n      setTimeout(this.initialize.bind(this), 150);\n      return;\n    }\n\n    const { cast } = window;\n\n    const options = new cast.framework.CastReceiverOptions();\n\n    // Set inactivity at 60 minutes if option maxInactivity is not passed\n    options.maxInactivity = this.params.maxInactivity || 3600000;\n\n    const context = cast.framework.CastReceiverContext.getInstance();\n\n    context.addCustomMessageListener(this.params.appNamespace, (customEvent) => {\n      const dataStringified = JSON.stringify(customEvent.data);\n\n      if (customEvent.data.method) {\n        this.$events.$emit('message', dataStringified);\n      }\n\n      this.log(`Message [${customEvent.senderId}]: ${dataStringified}`);\n    });\n\n    context.start(options);\n  }\n}\n\nexport { Sender, Receiver };\n\n\n\n// WEBPACK FOOTER //\n// ./src/chromecast-sdk.js"],"sourceRoot":""}